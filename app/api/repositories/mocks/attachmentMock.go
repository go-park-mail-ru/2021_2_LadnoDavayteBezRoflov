// Code generated by MockGen. DO NOT EDIT.
// Source: attachment.go

// Package mocks is a generated GoMock package.
package mocks

import (
	models "backendServer/app/api/models"
	multipart "mime/multipart"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAttachmentRepository is a mock of AttachmentRepository interface.
type MockAttachmentRepository struct {
	ctrl     *gomock.Controller
	recorder *MockAttachmentRepositoryMockRecorder
}

// MockAttachmentRepositoryMockRecorder is the mock recorder for MockAttachmentRepository.
type MockAttachmentRepositoryMockRecorder struct {
	mock *MockAttachmentRepository
}

// NewMockAttachmentRepository creates a new mock instance.
func NewMockAttachmentRepository(ctrl *gomock.Controller) *MockAttachmentRepository {
	mock := &MockAttachmentRepository{ctrl: ctrl}
	mock.recorder = &MockAttachmentRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAttachmentRepository) EXPECT() *MockAttachmentRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockAttachmentRepository) Create(file *multipart.FileHeader, cid uint) (*models.Attachment, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", file, cid)
	ret0, _ := ret[0].(*models.Attachment)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockAttachmentRepositoryMockRecorder) Create(file, cid interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockAttachmentRepository)(nil).Create), file, cid)
}

// Delete mocks base method.
func (m *MockAttachmentRepository) Delete(atid uint) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", atid)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockAttachmentRepositoryMockRecorder) Delete(atid interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockAttachmentRepository)(nil).Delete), atid)
}

// Get mocks base method.
func (m *MockAttachmentRepository) Get(atid uint) (*models.Attachment, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", atid)
	ret0, _ := ret[0].(*models.Attachment)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockAttachmentRepositoryMockRecorder) Get(atid interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockAttachmentRepository)(nil).Get), atid)
}
