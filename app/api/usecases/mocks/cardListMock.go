// Code generated by MockGen. DO NOT EDIT.
// Source: cardList.go

// Package mocks is a generated GoMock package.
package mocks

import (
	models "backendServer/app/api/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCardListUseCase is a mock of CardListUseCase interface.
type MockCardListUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockCardListUseCaseMockRecorder
}

// MockCardListUseCaseMockRecorder is the mock recorder for MockCardListUseCase.
type MockCardListUseCaseMockRecorder struct {
	mock *MockCardListUseCase
}

// NewMockCardListUseCase creates a new mock instance.
func NewMockCardListUseCase(ctrl *gomock.Controller) *MockCardListUseCase {
	mock := &MockCardListUseCase{ctrl: ctrl}
	mock.recorder = &MockCardListUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCardListUseCase) EXPECT() *MockCardListUseCaseMockRecorder {
	return m.recorder
}

// CreateCardList mocks base method.
func (m *MockCardListUseCase) CreateCardList(cardList *models.CardList) (uint, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateCardList", cardList)
	ret0, _ := ret[0].(uint)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateCardList indicates an expected call of CreateCardList.
func (mr *MockCardListUseCaseMockRecorder) CreateCardList(cardList interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateCardList", reflect.TypeOf((*MockCardListUseCase)(nil).CreateCardList), cardList)
}

// DeleteCardList mocks base method.
func (m *MockCardListUseCase) DeleteCardList(uid, clid uint) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteCardList", uid, clid)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteCardList indicates an expected call of DeleteCardList.
func (mr *MockCardListUseCaseMockRecorder) DeleteCardList(uid, clid interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteCardList", reflect.TypeOf((*MockCardListUseCase)(nil).DeleteCardList), uid, clid)
}

// GetCardList mocks base method.
func (m *MockCardListUseCase) GetCardList(uid, clid uint) (*models.CardList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCardList", uid, clid)
	ret0, _ := ret[0].(*models.CardList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCardList indicates an expected call of GetCardList.
func (mr *MockCardListUseCaseMockRecorder) GetCardList(uid, clid interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCardList", reflect.TypeOf((*MockCardListUseCase)(nil).GetCardList), uid, clid)
}

// UpdateCardList mocks base method.
func (m *MockCardListUseCase) UpdateCardList(uid uint, cardList *models.CardList) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateCardList", uid, cardList)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateCardList indicates an expected call of UpdateCardList.
func (mr *MockCardListUseCaseMockRecorder) UpdateCardList(uid, cardList interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateCardList", reflect.TypeOf((*MockCardListUseCase)(nil).UpdateCardList), uid, cardList)
}
